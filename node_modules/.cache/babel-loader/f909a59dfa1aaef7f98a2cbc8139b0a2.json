{"ast":null,"code":"var _jsxFileName = \"/Users/rizof/Desktop/test/src/FilterableProductTable.js\";\nimport React from 'react';\nimport ProductTable from './ProductTable.js';\nimport SearchBar from './SearchBar.js';\nimport ProductCategoryRow from './ProductCategoryRow.js';\nimport ProductRow from './ProductRow.js';\nimport './FilterableProductTable.css';\n\nclass FilterableProductTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterText: \"\",\n      inStockOnly: false\n    };\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockOnlyChange = this.handleInStockOnlyChange.bind(this);\n  }\n\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText\n    });\n  }\n\n  handleInStockOnlyChange(inStockOnly) {\n    this.setState({\n      inStockOnly\n    });\n  }\n\n  render() {\n    const {\n      products\n    } = this.props;\n    const rows = [];\n    let lastCategoriy = [];\n    const {\n      filterText,\n      inStockOnly\n    } = this.state;\n    products.map((product, index) => {\n      if (inStockOnly && !product.stocked) return;\n      if (product.name.toLowerCase().indexOf(filterText.toUpperCase()) === -1) return;\n\n      if (!lastCategoriy.includes(product.category)) {\n        lastCategoriy.push(product.category);\n        rows.push( /*#__PURE__*/React.createElement(ProductCategoryRow, {\n          key: product.category,\n          category: product.category,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 27\n          }\n        }));\n      }\n\n      const name = product.stocked ? product.name : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 59\n        }\n      }, product.name);\n      const price = product.price;\n      rows.push( /*#__PURE__*/React.createElement(ProductRow, {\n        key: index,\n        name: name,\n        price: price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchBar, {\n      filterText: filterText,\n      inStockOnly: inStockOnly,\n      onFilterTextChange: this.handleFilterTextChange,\n      onStockChange: this.handleInStockOnlyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ProductTable, {\n      products: products,\n      rows: rows,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default FilterableProductTable;","map":{"version":3,"sources":["/Users/rizof/Desktop/test/src/FilterableProductTable.js"],"names":["React","ProductTable","SearchBar","ProductCategoryRow","ProductRow","FilterableProductTable","PureComponent","constructor","props","state","filterText","inStockOnly","handleFilterTextChange","bind","handleInStockOnlyChange","setState","render","products","rows","lastCategoriy","map","product","index","stocked","name","toLowerCase","indexOf","toUpperCase","includes","category","push","price"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ProductTable from './ProductTable.js' \nimport SearchBar from './SearchBar.js'\nimport ProductCategoryRow from './ProductCategoryRow.js'\nimport ProductRow from './ProductRow.js'\nimport './FilterableProductTable.css'\n\nclass FilterableProductTable extends React.PureComponent{\n    constructor (props) {\n        super (props)\n        this.state = {\n            filterText: \"\",\n            inStockOnly: false\n        }\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\n        this.handleInStockOnlyChange= this.handleInStockOnlyChange.bind(this)\n    }\n    \n    handleFilterTextChange (filterText) {\n        this.setState({filterText})\n    }\n    \n    handleInStockOnlyChange (inStockOnly) {\n        this.setState({inStockOnly})\n    }\n\n    render () {\n        const {products} = this.props\n        const rows = []\n        let lastCategoriy = []\n        const {filterText, inStockOnly} = this.state\n\n        products.map((product, index) => {\n            if (inStockOnly && !product.stocked)\n                return\n            if (product.name.toLowerCase().indexOf(filterText.toUpperCase()) === -1)\n                return\n            if (!lastCategoriy.includes(product.category)){\n                lastCategoriy.push(product.category)\n                rows.push(<ProductCategoryRow key={product.category} category={product.category} />)\n            }\n            const name = product.stocked ? product.name : <span className='danger'>{product.name}</span>\n            const price = product.price \n            rows.push(<ProductRow key={index} name={name} price={price}/>)\n        })\n        return (<>\n            <SearchBar \n                filterText={filterText} \n                inStockOnly={inStockOnly}\n                onFilterTextChange={this.handleFilterTextChange}\n                onStockChange={this.handleInStockOnlyChange}\n            />\n            <ProductTable \n            products={products} \n            rows={rows}\n            />\n        </>)\n    }\n}\n\n\n\nexport default FilterableProductTable;"]},"metadata":{},"sourceType":"module"}